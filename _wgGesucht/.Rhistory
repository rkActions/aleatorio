print(i)
id = page_ids[[i]]
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
file = paste0(tempfile(), ".html")
# download
download.file(url, file)
# read
html = rvest::read_html(file)
size = getSize(html) %>% as.numeric()
size
key_fact_values = html %>% html_elements(".key_fact_value") %>%
html_text(trim=T)
key_fact_values
html
print(i)
id = page_ids[[i]]
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
url
i = 50
print(i)
id = page_ids[[i]]
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
file = paste0(tempfile(), ".html")
# download
download.file(url, file)
# read
html = rvest::read_html(file)
size = getSize(html) %>% as.numeric()
size
id
page_ids
i = 51
print(i)
id = page_ids[[i]]
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
file = paste0(tempfile(), ".html")
# download
download.file(url, file)
# read
html = rvest::read_html(file)
size = getSize(html) %>% as.numeric()
size
price = getPrice(html) %>% as.numeric()
price
location = getLocation(html) %>% as.character()
location
wg = getWG(file)
wg
# get the ids -------------------------------------------------------------
start = end - 50
page_ids = start:end
rows = vector("list", length=length(page_ids))
for(i in seq_along(page_ids)){
print(i)
id = page_ids[[i]]
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
file = paste0(tempfile(), ".html")
# download
download.file(url, file)
# read
html = rvest::read_html(file)
size = getSize(html) %>% as.numeric()
price = getPrice(html) %>% as.numeric()
location = getLocation(html) %>% as.character()
wg = getWG(file)
print(paste0("WG: ", wg))
row = list(price = price, size = size, location = location, id = id, wg=wg, date=today)
rows[[i]] = row
}
# create dataframe --------------------------------------------------------
df_new = bind_rows(rows)
# bind them together ------------------------------------------------------
df_final = bind_rows(df, df_new)
# write out ---------------------------------------------------------------
write.csv(df_final, outpath, row.names = F)
# calculate how many wgsjj:w ----------------------------------------------
data = read.csv("_wgGesucht/analysis/wgs.csv")
outpath
outpath = here::here("analysis/wgs.csv")
outpath
# write out ---------------------------------------------------------------
write.csv(df_final, outpath, row.names = F)
# calculate how many wgsjj:w ----------------------------------------------
data = read.csv("_wgGesucht/analysis/wgs.csv")
data = read.csv(here::here("analysis/wgs.csv"))
noNa = data %>%
filter(!is.na(price))
noNaWg = noNa %>%
filter(wg == T)
df = data.frame(
date = Sys.time(),
noNaAndWg = nrow(noNaWg)
)
outpath = here::here("analysis/nwgs.csv")
if(!file.exists(outpath)){
write.csv(df, outpath, row.names = F)
}else{
df_old = read.csv(outpath)
df_new = rbind(df, df_old)
write.csv(df_new, outpath, row.names = F)
}
df_final
# get the ids -------------------------------------------------------------
start = end - 50
page_ids = start:end
page_ids
id = 9699256
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
file = paste0(tempfile(), ".html")
# download
download.file(url, file)
# read
html = rvest::read_html(file)
size = getSize(html) %>% as.numeric()
size
page_ids
which(page_ids == 9699256)
outpath = here::here("analysis/wgs.csv")
# source ------------------------------------------------------------------
source("_wgGesucht/analysis/utils.R")
# outfile -----------------------------------------------------------------
outpath = "_wgGesucht/analysis/wgs.csv"
outpath = here::here("analysis/wgs.csv")
if(!file.exists(outpath)) {
print("file does not exist")
df = data.frame(
price = NA,
location = NA,
id = NA,
size = NA,
wg = NA
)
write.csv(df, outpath)
} else{
df = read.csv(outpath)
print("file exists reading...")
}
end = findId()
end
print(paste0("Start: ", end))
df[["date"]] = as.Date(df$date)
# date --------------------------------------------------------------------
today = Sys.Date()
# get the ids -------------------------------------------------------------
start = end - 50
page_ids = start:end
page_ids
rows = vector("list", length=length(page_ids))
for(i in seq_along(page_ids)){
print(i)
id = page_ids[[i]]
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
file = paste0(tempfile(), ".html")
# download
download.file(url, file)
# read
html = rvest::read_html(file)
size = getSize(html) %>% as.numeric()
price = getPrice(html) %>% as.numeric()
location = getLocation(html) %>% as.character()
wg = getWG(file)
print(paste0("WG: ", wg))
row = list(price = price, size = size, location = location, id = id, wg=wg, date=today)
rows[[i]] = row
}
rows
bind_rows(rows)
rows
rows
# create dataframe --------------------------------------------------------
df_new = bind_rows(rows)
df_new
rows
dplyr::bind_rows(rows)
rows
df_new
do.call("bind_rows", rows)
length(rows)
map(rows, as.data.frame)
library(dplyr)
map(rows, as.data.frame)
library(purrr)
map(rows, as.data.frame)
rows[[1]]
bind_rows(rows[[1]])
rows[[1]]
lapply(rows, function(x)x[["wg"]])
?vapply
vapply(rows, function(x)x[["wg"]], simplify=T)
vapply(rows, function(x)x[["wg"]], FUN.VALUE=logical(1), simplify=T)
vapply(rows, function(x)x[["wg"]], FUN.VALUE=logical(1))
wgs = vapply(rows, function(x)x[["wg"]], FUN.VALUE=logical(1))
rows = rows[wgs]
rows
# create dataframe --------------------------------------------------------
df_new = bind_rows(rows)
df_new
rows
wgs = vapply(rows, function(x)x[["wg"]] && (is.numeric(x[["price"]])), FUN.VALUE=logical(1))
wgs
numeric(0)
a = numeric(0)
a >0
a > 0
typeof(a)
length(a)
wgs = vapply(rows, function(x)x[["wg"]] && (length(x[["price"]])!=0), FUN.VALUE=logical(1))
wgs
wgs
rows
end = 10605852
# date --------------------------------------------------------------------
today = Sys.Date()
# get the ids -------------------------------------------------------------
start = end - 50
page_ids = start:end
rows = vector("list", length=length(page_ids))
for(i in seq_along(page_ids)){
print(i)
id = page_ids[[i]]
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
file = paste0(tempfile(), ".html")
# download
download.file(url, file)
# read
html = rvest::read_html(file)
size = getSize(html) %>% as.numeric()
price = getPrice(html) %>% as.numeric()
location = getLocation(html) %>% as.character()
wg = getWG(file)
print(paste0("WG: ", wg))
row = list(price = price, size = size, location = location, id = id, wg=wg, date=today)
rows[[i]] = row
}
# create dataframe --------------------------------------------------------
df_new = bind_rows(rows)
df_new
df
df_new
# bind them together ------------------------------------------------------
df_final = bind_rows(df, df_new)
outpath
# write out ---------------------------------------------------------------
write.csv(df_final, outpath, row.names = F)
data = read.csv(here::here("analysis/wgs.csv"))
noNa = data %>%
filter(!is.na(price))
noNaWg = noNa %>%
filter(wg == T)
df = data.frame(
date = Sys.time(),
noNaAndWg = nrow(noNaWg)
)
outpath = here::here("analysis/nwgs.csv")
if(!file.exists(outpath)){
write.csv(df, outpath, row.names = F)
}else{
df_old = read.csv(outpath)
df_new = rbind(df, df_old)
write.csv(df_new, outpath, row.names = F)
}
# get the ids -------------------------------------------------------------
page_ids = (end+20):(end-30)
page_ids
outpath = here::here("analysis/wgs.csv")
if(!file.exists(outpath)) {
print("file does not exist")
df = data.frame(
price = NA,
location = NA,
id = NA,
size = NA,
wg = NA
)
write.csv(df, outpath)
} else{
df = read.csv(outpath)
print("file exists reading...")
}
end = findId()
print(paste0("Start: ", end))
df[["date"]] = as.Date(df$date)
# date --------------------------------------------------------------------
today = Sys.Date()
# get the ids -------------------------------------------------------------
page_ids = (end+20):(end-30)
rows = vector("list", length=length(page_ids))
for(i in seq_along(page_ids)){
print(i)
id = page_ids[[i]]
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
file = paste0(tempfile(), ".html")
# download
download.file(url, file)
# read
html = rvest::read_html(file)
size = getSize(html) %>% as.numeric()
price = getPrice(html) %>% as.numeric()
location = getLocation(html) %>% as.character()
wg = getWG(file)
print(paste0("WG: ", wg))
row = list(price = price, size = size, location = location, id = id, wg=wg, date=today)
rows[[i]] = row
}
# create dataframe --------------------------------------------------------
df_new = bind_rows(rows)
df_new
library(tidygeocoder)
source("_wgGesucht/analysis/utils.R")
source(here("analysis/utils.R"))
library(here)
source(here("analysis/utils.R"))
outpath = here("analysis/wgs.csv")
if(!file.exists(outpath)) {
print("file does not exist")
df = data.frame(
price = NA,
location = NA,
id = NA,
size = NA,
wg = NA
)
write.csv(df, outpath)
} else{
df = read.csv(outpath)
print("file exists reading...")
}
end = findId()
end
print(paste0("Start: ", end))
df[["date"]] = as.Date(df$date)
# date --------------------------------------------------------------------
today = Sys.Date()
# get the ids -------------------------------------------------------------
page_ids = (end+20):(end-30)
rows = vector("list", length=length(page_ids))
for(i in seq_along(page_ids)){
print(i)
id = page_ids[[i]]
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
file = paste0(tempfile(), ".html")
# download
download.file(url, file)
# read
html = rvest::read_html(file)
size = getSize(html) %>% as.numeric()
price = getPrice(html) %>% as.numeric()
location = getLocation(html) %>% as.character()
wg = getWG(file)
print(paste0("WG: ", wg))
row = list(price = price, size = size, location = location, id = id, wg=wg, date=today)
rows[[i]] = row
}
# create dataframe --------------------------------------------------------
df_new = bind_rows(rows)
df_new
# geocode -----------------------------------------------------------------
df_new %>%
geocode(
location
)
# geocode -----------------------------------------------------------------
df_new_geo = df_new %>%
geocode(location)
# bind them together ------------------------------------------------------
df_final = bind_rows(df, df_new_geo)
# write out ---------------------------------------------------------------
write.csv(df_final, outpath, row.names = F)
# calculate how many wgsjj:w ----------------------------------------------
data = read.csv("_wgGesucht/analysis/wgs.csv")
data = read.csv(here::here("analysis/wgs.csv"))
noNa = data %>%
filter(!is.na(price))
noNaWg = noNa %>%
filter(wg == T)
df = data.frame(
date = Sys.time(),
noNaAndWg = nrow(noNaWg)
)
df_final
df_final %>% head
df_final %>% glimpse
library(rvest)
library(glue)
library(dplyr)
library(stringr)
library(tidygeocoder)
outpath = here("analysis/wgs.csv")
if(!file.exists(outpath)) {
print("file does not exist")
df = data.frame(
price = NA,
location = NA,
id = NA,
size = NA,
wg = NA
)
write.csv(df, outpath)
} else{
df = read.csv(outpath)
print("file exists reading...")
}
library(rvest)
library(glue)
library(dplyr)
library(stringr)
library(tidygeocoder)
# source ------------------------------------------------------------------
source("_wgGesucht/analysis/utils.R")
# outfile -----------------------------------------------------------------
outpath = "_wgGesucht/analysis/wgs.csv"
if(!file.exists(outpath)) {
print("file does not exist")
df = data.frame(
price = NA,
location = NA,
id = NA,
size = NA,
wg = NA
)
write.csv(df, outpath)
} else{
df = read.csv(outpath)
print("file exists reading...")
}
outpath = here("analysis/_archive/wgs.csv")
if(!file.exists(outpath)) {
print("file does not exist")
df = data.frame(
price = NA,
location = NA,
id = NA,
size = NA,
wg = NA
)
write.csv(df, outpath)
} else{
df = read.csv(outpath)
print("file exists reading...")
}
outpath
outpath = here("analysis/wgs.csv")
if(!file.exists(outpath)) {
print("file does not exist")
df = data.frame(
price = NA,
location = NA,
id = NA,
size = NA,
wg = NA
)
write.csv(df, outpath)
} else{
df = read.csv(outpath)
print("file exists reading...")
}
end = findId()
end
df[["date"]] = as.Date(df$date)
# date --------------------------------------------------------------------
today = Sys.Date()
# get the ids -------------------------------------------------------------
page_ids = (end+20):(end-30)
rows = vector("list", length=length(page_ids))
for(i in seq_along(page_ids)){
print(i)
id = page_ids[[i]]
url = paste0("https://www.wg-gesucht.de/", id, ".html" )
file = paste0(tempfile(), ".html")
# download
download.file(url, file)
# read
html = rvest::read_html(file)
size = getSize(html) %>% as.numeric()
price = getPrice(html) %>% as.numeric()
location = getLocation(html) %>% as.character()
wg = getWG(file)
print(paste0("WG: ", wg))
row = list(price = price, size = size, location = location, id = id, wg=wg, date=today)
rows[[i]] = row
}
# create dataframe --------------------------------------------------------
df_new = bind_rows(rows)
df_new
# geocode -----------------------------------------------------------------
df_new_geo = df_new %>%
geocode(location)
# bind them together ------------------------------------------------------
df_final = bind_rows(df, df_new_geo)
# write out ---------------------------------------------------------------
write.csv(df_final, outpath, row.names = F)
# calculate how many wgsjj:w ----------------------------------------------
data = read.csv(outpath)
data
noNa = data %>%
filter(!is.na(price))
noNaWg = noNa %>%
filter(wg == T)
df = data.frame(
date = Sys.time(),
noNaAndWg = nrow(noNaWg)
)
df
outpath_n = here("analysis/nwgs.csv")
outdir = dirname(outpath_n)
if(!file.exists(outpath_n)){
write.csv(df, outpath_n, row.names = F)
}else{
df_old = read.csv(outpath_n)
df_new = rbind(df, df_old)
write.csv(df_new, outpath_n, row.names = F)
}
